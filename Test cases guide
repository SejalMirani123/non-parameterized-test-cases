Dependency Required:-
testImplementation 'org.mockito:mockito-inline:3.4.6'
testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
•	The class for which we are writing the test cases(CarService), we will annotate it  with @InjectMocks 
•	The DAO and Services whose methods we want to mock, we will annotated with @Mock
  @Mock
ProductDao productDao;
@InjectMocks
ProductService productService;


@MockitoSettings
public class UserServiceImplTest {
    @Mock
    UserRepository userRepository;

    @InjectMocks
    UserService userService;

//Mockito.when
    @Test
    public void getAllUserInfoTest(){
        Mockito.when(userRepository.saveAll(any())).thenReturn(2);
        Mockito.when(userRepository.save(any())).thenReturn(3);
        Mockito.when(userRepository.save(any()).thenThrow(new NullPointerException());
        User  user=userService.updateUser("56789", "67890");
        Assertions.assertNotNull(user);
        
    }

    //Mockito.donothing and mockito.verify uses
    @Test
    public void deleteByIdTest(){
       Mockito.doNothing().when(userRepository).findByUserId("6789");
        userService.deleteById("5678");
        Mockito.verify(userRepository).findByUserId("'6789");
    }

    //Mockito.doThrow
    @Test
    public void deleteByIdExceptionTest(){
        Mockito.doThrow(new RuntimeException()).when(userRepository).findByUserId("6789");
        userService.deleteById("5678");
       
    }
    
}
